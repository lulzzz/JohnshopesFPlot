<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAACAgAAABAAgAqAgAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwMrACvFq8AtSm1ALkzuQC+Qr4A3JncAOnA6QDz3fMA9eP1APfq
        9wD68foA////AKkEqQBpAFwAQwBTAGgAYQByAHAAIAAyADAAMAA4AFwASgBvAGgAbgAAAAAAIJZdAgAA
        XQL2AAD2QgAAACg5XQIoOV0CEBRdAvYAAAAAAAABAABdAgAAAABEEY4AQIbOdzABXQIfhs534csKfgAA
        AAAAAF0CKJZdAunLCn4AAF0CAAAAAIwDXQJIAV0CcABlACg5XQLoVl0CbwB0AAAAXQJIAV0C9gAAAAAA
        bgDoVl0CMwAAM8gHLgSoAgCqOAEAAIAAAACoAgCqAwAAAGkAYwA4AQAAKAIAADgBAAAEAwAHuAAAABAU
        XQLIBy4EAAAAAAAAAABEks13OAEAAFBXXQIAAAAAAAAAAAAAAADoVl0CakayZSiWXQIoOV0CuC1dAiQA
        AAAAAAAAwAUAAAABAQFkEI4AAAAAAKQRjgA0mMh3lZlKCf7///8fhs53UobOdwAAAAAoll0CKJZdAjiW
        XQK4LV0CdBGOAG/FVHYAAF0CAAAAACCWXQK0EY4AWFcxAAAAXQIAAAAAd1cxAGQh/WU4ll0CKJZdArgt
        XQIIVzIAiBGOAP/////oEY4AgFcxAMgdQWX+////d1cxAJIhMQAoll0CKCH9ZTiWXQJQEo4AuC1dAgEA
        AAAoll0CAAAAAKQAAADAEY4AtBKOAAAAAAAAAAYAEH1pBf7///+0Eo4ABQCMAKgZZgWAABDACVjOd6wS
        jgD4fGkFAQAAAAh9aQUwEo4Ag1jOdwlYzncAAAAAAAAAAAAAAAAJWM53rBKOAF/OVHYAAAAAAhAAADAU
        jgABAAAAGAAAAAAAAACUEo4AQgAAAAAAAAB4Eo4AAAAAAAAAAAAAAAAAAAAAAAwAAAACAAAAAQEAAAAA
        AAAAAAAAAAAAAAIAAACHW853rckKfgAAOwAAAAAArAE7AAUAAADQEo4ABgDOAMEIAAAAAADAAAAAAAAA
        AAACAAAASAMBAiYAAAAHAPIAwQgAAAAAAABIAAEC2AkCAlwBAQJIeQICaAUBApgSjgBQXwgCoBOOADSY
        yHdtlkoJ/v///4dbzndVWc53JgAAACYAAAAmAAAAZ2xpXENTaGFycCAyMDA4XEpvaG5zSG9wZS5GUGxv
        dC5TVk5chJLNd2q9VHa8AgAAAAAAAAAAAAAAAAAAhBOOAEh5AgImAAAAAAAAAHvJVHZKRLJlJgAAADAU
        jgAmAAAAAAA7AAAAAAAAAAAAJgAAAHT0qAAAAAAAbBOOAIgTjgBAFI4AieJQdmaeaBP+////e8lUdmzl
        SgAAAAAASHkCAiYAAADcE44AAAAAAAINDQ0NDQ0NDQ0NDQ0NDQINDAwMDAwMCwsLDAwMDAwNDQwMDAsL
        CwsLCgoKCwwMDQ0MDAsLCwsKCgoHCgoLDA0NDAsLCwsKCgkIAQgKCgsNDQsLCwsKCgkBAQEBAQkLDQ0L
        CgoHCAkGAQEBAQEFCg0NCgoJBwEBAQEBAQEBCAoNDQEBAQEBAQEBAQEBAQkKDQ0KCgkHAQEBAQEBAQEI
        Cg0NCwoKBwgJBgEBAQEBBQoNDQsLCwsKCgkBAQEBAQkLDQ0MCwsLCwoKCQgBCAoKCw0NDAwLCwsLCgoK
        BwoKCwwNDQwMDAsLCwsLCgoKCwwMDQQNDQ0NDQ0NDQ0NDQ0NDQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACAAAABAAAAAAQAIAAAA
        AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsDKwArxavALUptQC5M7kAuzm7AL5CvgDQd9AA04DTANyZ
        3ADksuQA6cDpAO3M7QDx1/EA893zAPXj9QD36vcA+vH6AP///wCpBKkAOABcAEoAbwBoAG4AAAAAACCW
        XQIAAF0C9gAA9kIAAAAoOV0CKDldAhAUXQL2AAAAAAAAAQAAXQIAAAAARBGOAECGzncwAV0CH4bOd+HL
        Cn4AAAAAAABdAiiWXQLpywp+AABdAgAAAACMA10CSAFdAnAAZQAoOV0C6FZdAm8AdAAAAF0CSAFdAvYA
        AAAAAG4A6FZdAjMAADPIBy4EqAIAqjgBAACAAAAAqAIAqgMAAABpAGMAOAEAACgCAAA4AQAABAMAB7gA
        AAAQFF0CyAcuBAAAAAAAAAAARJLNdzgBAABQV10CAAAAAAAAAAAAAAAA6FZdAmpGsmUoll0CKDldArgt
        XQIkAAAAAAAAAMAFAAAAAQEBZBCOAAAAAACkEY4ANJjId5WZSgn+////H4bOd1KGzncAAAAAKJZdAiiW
        XQI4ll0CuC1dAnQRjgBvxVR2AABdAgAAAAAgll0CtBGOAFhXMQAAAF0CAAAAAHdXMQBkIf1lOJZdAiiW
        XQK4LV0CCFcyAIgRjgD/////6BGOAIBXMQDIHUFl/v///3dXMQCSITEAKJZdAigh/WU4ll0CUBKOALgt
        XQIBAAAAKJZdAgAAAACkAAAAwBGOALQSjgAAAAAAAAAGABB9aQX+////tBKOAAUAjACoGWYFgAAQwAlY
        znesEo4A+HxpBQEAAAAIfWkFMBKOAINYzncJWM53AAAAAAAAAAAAAAAACVjOd6wSjgBfzlR2AAAAAAIQ
        AAAwFI4AAQAAABgAAAAAAAAAlBKOAEIAAAAAAAAAeBKOAAAAAAAAAAAAAAAAAAAAAAAMAAAAAgAAAAEB
        AAAAAAAAAAAAAAAAAAACAAAAh1vOd63JCn4AADsAAAAAAKwBOwAFAAAA0BKOAAYAzgDBCAAAAAAAwAAA
        AAAAAAAAAgAAAEgDAQImAAAABwDyAMEIAAAAAAAASAABAtgJAgJcAQECSHkCAmgFAQKYEo4AUF8IAqAT
        jgA0mMh3bZZKCf7///+HW853VVnOdyYAAAAmAAAAJgAAAGdsaVxDU2hhcnAgMjAwOFxKb2huc0hvcGUu
        RlBsb3QuU1ZOXISSzXdqvVR2vAIAAAAAAAAAAAAAAAAAAIQTjgBIeQICJgAAAAAAAAB7yVR2SkSyZSYA
        AAAwFI4AJgAAAAAAOwAAAAAAAAAAACYAAAB09KgAAAAAAGwTjgCIE44AQBSOAIniUHZmnmgT/v///3vJ
        VHZs5UoAAAAAAEh5AgImAAAA3BOOAAAAAAACExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTAhMS
        EhISEhISEhISEhISEhISEhISEhISEhISEhISEhITExISEhISEhISEhISEhIRERERERISEhISEhISEhIS
        EhMTEhISEhISEhISERERERERERERERERERISEhISEhISExMSEhISEhISEREREREREREREBAPEBAQERES
        EhISEhITExISEhISEREREREREREREBAQEA8NDxAQEREREhISEhMTEhISEhERERERERERERAQEBAQDwsO
        EBAQEREREhISExMSEhIRERERERERERAQEBAQEA4KAQsPEBAQEREREhITExISEREREREREREQEBAQEA8P
        DgEBAQ4PEBAQEREREhMTEhIREREREREREBAQEA8KDAsJBQEIBQoPDBARERESExMSERERERERERAQEBAP
        DwwBAQEBAQEBAQEHDxARERETExIRERERERAQEBAQDw8KCgEBAQEBAQEBAQwPEBERERMTEREREBAQDwsP
        Dg4PDgkBAQEBAQEBAQEBBgYQEBERExMREBAQEBAPDRMKCgsNAQEBAQEBAQEBAQEBDhAQERETExAQEBAQ
        Dw8LAQEBAQoBAQEBAQEBAQEBAQEOEBARERMTEBAQDw8NCwgBAQEBAQEBAQEBAQEBAQEBAQ8QEBERExMB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQENDxAQERETExAQEA8PDQsIAQEBAQEBAQEBAQEBAQEBAQEPEBAR
        ERMTEBAQEBAPDwsBAQEBCgEBAQEBAQEBAQEBAQ4QEBERExMREBAQEBAPDRMKCgsNAQEBAQEBAQEBAQEB
        DhAQERETExERERAQEA8LDw4ODw4JAQEBAQEBAQEBAQYGEBARERMTEhEREREREBAQEBAPDwoKAQEBAQEB
        AQEBDA8QERERExMSERERERERERAQEBAPDwwBAQEBAQEBAQEHDxARERETExISERERERERERAQEBAPCgwL
        CQUBCAUKDwwQEREREhMTEhIRERERERERERAQEBAQDw8OAQEBDg8QEBARERESExMSEhIRERERERERERAQ
        EBAQEA4KAQsPEBAQEREREhITExISEhIREREREREREREQEBAQEA8LDhAQEBERERISEhMTEhISEhIRERER
        EREREREQEBAQDw0PEBARERESEhISExMSEhISEhISEREREREREREREBAPEBAQERESEhISEhITExISEhIS
        EhISEhERERERERERERERERESEhISEhISEhMTEhISEhISEhISEhISEhEREREREhISEhISEhISEhISEwQT
        ExMTExMTExMTExMTExMTExMTExMTExMTExMTExMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>